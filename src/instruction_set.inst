:fetch 0x00
XX
0000001010000001 # PC out; ADDRESS in
0000000001010001 # RAM out; INST in

:LDA_i 0x01 (A = [p])
XX
0000000000001001 # PC++
0000001010000001 # PC -> ADDRESS
0000000010010001 # RAM[ADRESS] -> ADRESS
1000000000011101 # RAM[ADRESS] -> A; END

:LDA_d 0x02 (A = p)
XX
0000000000001001
0000001010000001
1000000000011101

:LDB_i 0x03 (B = [p])
XX
0000000000001001 # PC++
0000001010000001 # PC -> ADDRESS
0000000010010001 # RAM[ADRESS] -> ADRESS
0010000000011101 # RAM[ADRESS] -> B; END

:LDB_d 0x04 (B = p)
XX
0000000000001001
0000001010000001
0010000000011101

:ADDAB 0x05 (A = B + A)
XX
1000000100001101

:JMP 0x06 (PC = p)
XX
0000000000001001
0000001010000001
0000010000010101

:STA 0x07 ([p] = A)
XX
0000000000001001 # PC ++
0000001010000001 # PC -> ADDRESS
0000000010010001 # RAM[ADRESS] -> ADRESS
0100000000101101 # A -> RAM[ADDRESS]

:STB 0x08 ([p] = B)
XX
0000000000001001 # PC ++
0000001010000001 # PC -> ADDRESS
0000000010010001 # RAM[ADRESS] -> ADRESS
0001000000101101 # B -> RAM[ADDRESS]


:JZ 0x09 (PC = p if Z)
X1
0000000000001001
0000001010000001
0000010000010101
:JZ 0x09 (PC = p if Z)
X0
0000000000001001
0000000000001101


:JNZ 0x0a (PC = p if !Z)
X0
0000000000001001
0000001010000001
0000010000010101
:JNZ 0x0a (PC = p if !Z)
X1
0000000000001001
0000000000001101

:JN 0x0b (PC = p if N)
1X
0000000000001001
0000001010000001
0000010000010101
:JN 0x0b (PC = p if N)
0X
0000000000001001
0000000000001101


:JP 0x0c (PC = p if P)
0X
0000000000001001
0000001010000001
0000010000010101
:JP 0x0c (PC = p if P)
1X
0000000000001001
0000000000001101

:OUTA 0x0d (OP = A)
XX
0100100000001101